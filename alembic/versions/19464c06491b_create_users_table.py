"""Create users table

Revision ID: 19464c06491b
Revises: ddaaac4304d2
Create Date: 2024-10-09 23:43:55.751426

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '19464c06491b'
down_revision: Union[str, None] = 'ddaaac4304d2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    conn = op.get_bind()

    # Check if the 'users' table exists before creating it
    if not conn.dialect.has_table(conn, 'users'):
        op.create_table(
            'users',
            sa.Column('email', sa.String(), nullable=False),
            sa.Column('password_hash', sa.String(), nullable=True),
            sa.PrimaryKeyConstraint('email')
        )

    # Check if the 'question_answers' table exists before creating it
    if not conn.dialect.has_table(conn, 'question_answers'):
        op.create_table(
            'question_answers',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('question', sa.String(), nullable=False),
            sa.Column('answer', sa.String(), nullable=False),
            sa.Column('email', sa.String(), nullable=False),
            sa.ForeignKeyConstraint(['email'], ['users.email'], ),
            sa.PrimaryKeyConstraint('id')
        )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('question_answers')
    op.drop_table('users')
    # ### end Alembic commands ###
